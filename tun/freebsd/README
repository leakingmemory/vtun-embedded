$Id$

Ethernet tunnel (TAP) device driver
-----------------------------------

	Q. What is TAP driver?

	- TAP driver was designed as low level kernel support for
	  Ethernet tunneling. It provides to userland application
	  two interfaces:
		- /dev/tapX	- character device;
		- tapX		- virtual Ethernet interface.

	  Userland application can write Ethernet frame to /dev/tapX
	  and kernel will receive this frame from tapX interface. 
	  In the same time every frame that kernel writes to tapX 
	  interface can be read by userland application from /dev/tapX
	  device.

	Q. What is TAP driver used for?

	- As mentioned above, main purpose of TAP driver is Ethernet 
	  tunneling. It can be used with VTUN (http://vtun.netpedia.net).

	Q. What is the difference between TUN driver and TAP driver?

	- Current TUN implementation works with IP only.
	  TAP works with Ethernet frames only.

	Q. What is the difference between BPF and TAP driver?

	- BFP is a advanced packet filter. It can be attached to existing
	  network interface. It does not provide virtual network interface.
	  TAP driver does provide virtual network interface and it is possible
	  to attach BPF to this interface.

	Q. Is it possible to compile TAP driver as loadable module?

	- Yes. There are two files: Makefile and Makefile.kmodule. These
          can be used to build driver outside and inside kernel source
          tree.

	Q. Does TAP driver support kernel Ethernet bridging?

	- Yes. Adjust Makefile and do not forget to include bridging
          support in kernel. See ``bridge(4)'' for details.

	Maskim Yevmenkin <m_evmenkin@yahoo.com>
